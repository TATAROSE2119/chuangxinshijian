C51 COMPILER V9.54   MAIN                                                                  01/01/2023 21:50:47 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil51\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.
                    -lst) OBJECT(.\Objects\main.obj)

line level    source

   1          /*
   2           * @Author: Panyan
   3           * @Date: 2022-12-28 20:17:38
   4           * @LastEditors: Do not edit
   5           * @LastEditTime: 2023-01-01 21:44:39
   6           * @FilePath: \undefinedd:\kEILPROJECT\小许\main.c
   7           */
   8          #include "reg52.h"
   9          #include "publish.h"
  10          #include "led.h"
  11          #include "smg.h"
  12          #include "key.h"
  13          void Timer0Init(void);          //1�??@11.0592MHz
  14          u16 time_count=0;           //倒�?�?
  15          u16 t0_count=0;             
  16          u8 Digbuff[8];
  17          u8 key_v=0;                 //按键�?
  18          u8 s_v=0;                 //按键�?
  19          bit key_flag=0;             //按下检�?
  20          u8 led_on_num=0;            //打开的led序号
  21          u8 command_num=0;
  22          u8 rec_data;
  23          
  24          void uart_init(u8 baud)
  25          {
  26   1              TMOD|=0X20;     //设置计数器工作方�?2
  27   1              SCON=0X50;      //设置为工作方�?1
  28   1              PCON=0X80;      //波特率加�?
  29   1              TH1=baud;       //计数器初始值�?�?
  30   1              TL1=baud;
  31   1              ES=1;           //打开接收�?��
  32   1              EA=1;           //打开总中�?
  33   1              TR1=1;          //打开计数�?              
  34   1      }
  35          
  36          void main(void)
  37          {
  38   1          Timer0Init();
  39   1          uart_init(0xfa);//9600
  40   1          
  41   1          while (1)
  42   1          {
  43   2              Digbuff[2]=0x40;
  44   2              Digbuff[3]=0x40;
  45   2              Digbuff[4]=0x40;
  46   2              Digbuff[5]=0x40;
  47   2              key_v=key_scan(0);
  48   2              if ((key_v==KEY1_PRESS)||(s_v==KEY1_PRESS))
  49   2              {
  50   3                  command_num=1;
  51   3              }
  52   2              else if ((key_v==KEY2_PRESS)||(s_v==KEY2_PRESS))
  53   2              {
  54   3                  command_num=2;
C51 COMPILER V9.54   MAIN                                                                  01/01/2023 21:50:47 PAGE 2   

  55   3              }
  56   2              else if ((key_v==KEY3_PRESS)||(s_v==KEY3_PRESS))
  57   2              {
  58   3                  command_num=3;
  59   3              }
  60   2              if (command_num==1)
  61   2              {
  62   3                  Digbuff[0]=gsmg_code[0];
  63   3                  Digbuff[1]=gsmg_code[1];
  64   3                  time_count=5;
  65   3                  key_flag=1;
  66   3                  led_on_num= LED_on(1);
  67   3                  LED_off(2);
  68   3                  LED_off(3);
  69   3              }
  70   2              else if (command_num==2)
  71   2              {
  72   3                  Digbuff[0]=gsmg_code[0];
  73   3                  Digbuff[1]=gsmg_code[2];
  74   3                  time_count=10;
  75   3                  key_flag=1;
  76   3                  led_on_num=LED_on(2);
  77   3                  LED_off(1);
  78   3                  LED_off(3);
  79   3              }
  80   2              else if (command_num==3)
  81   2              {
  82   3                  Digbuff[0]=gsmg_code[0];
  83   3                  Digbuff[1]=gsmg_code[3];
  84   3                  time_count=15;
  85   3                  key_flag=1;
  86   3                  led_on_num=LED_on(3);
  87   3                  LED_off(2);
  88   3                  LED_off(1);
  89   3              }
  90   2              
  91   2              Digbuff[6]=gsmg_code[time_count/10];
  92   2              Digbuff[7]=gsmg_code[time_count%10];
  93   2              smg_display(Digbuff,1);
  94   2          }
  95   1      }
  96          void Timer0Init(void)           //1�??@11.0592MHz
  97          {
  98   1              AUXR |= 0x80;           //定时器时�?1T模式
  99   1              TMOD &= 0xF0;           //设置定时器模�?
 100   1              TL0 = 0xCD;             //设置定时初�?�?
 101   1              TH0 = 0xD4;             //设置定时初�?�?
 102   1              TF0 = 0;                //清除TF0标志
 103   1              TR0 = 1;                //定时�?0开始�?�?
 104   1          ET0=1;
 105   1          EA=1;
 106   1      }
 107          void tm0_isr() interrupt 1
 108          {
 109   1          TL0 = 0xCD;         //设置定时初�?�?
 110   1              TH0 = 0xD4;             //设置定时初�?�?
 111   1      
 112   1          if (++t0_count==1000)
 113   1          {
 114   2              t0_count=0;
 115   2              if (key_flag==1)
 116   2              {
C51 COMPILER V9.54   MAIN                                                                  01/01/2023 21:50:47 PAGE 3   

 117   3                  time_count--;
 118   3                  if (time_count==0)
 119   3                  {   
 120   4                      LED_off(led_on_num);
 121   4                      key_flag=0;
 122   4                  }
 123   3              }
 124   2          }
 125   1      }
 126          void uart() interrupt 4 //串口通信�?��函数
 127          {
 128   1              RI = 0;                 //清除接收�?��标志�?
 129   1              rec_data=SBUF;  //存储接收到的数据
 130   1          if(rec_data=='1')
 131   1          {
 132   2              s_v=1;
 133   2          }
 134   1          else if (rec_data=='2')
 135   1          {
 136   2              s_v=2;
 137   2          }
 138   1          else if (rec_data=='3')
 139   1          {
 140   2              s_v=3;
 141   2          }
 142   1          
 143   1              SBUF=rec_data;  //将接收到的数�?��入到发送寄存器
 144   1              while(!TI);             //等待发送数�?���?
 145   1              TI=0;                   //清除发送完成标志位                           
 146   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    424    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     17    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
